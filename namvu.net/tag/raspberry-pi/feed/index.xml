<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	 xmlns:media="http://search.yahoo.com/mrss/" >

<channel>
	<title>raspberry pi &#8211; Nam Vu Personal Site</title>
	<atom:link href="/tag/raspberry-pi/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Powered by Google Cloud Compute</description>
	<lastBuildDate>Fri, 13 Aug 2021 13:00:48 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.3.1</generator>

<image>
	<url>/wp-content/uploads/2018/12/cropped-namvu_512-150x150.png</url>
	<title>raspberry pi &#8211; Nam Vu Personal Site</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Setup a family printer with a Raspberry Pi 1, CUPS and Canon LBP 2900</title>
		<link>/2021/07/setup-a-family-printer-with-a-raspberry-pi-1-and-canon-lbp-2900/</link>
					<comments>/2021/07/setup-a-family-printer-with-a-raspberry-pi-1-and-canon-lbp-2900/#comments</comments>
		
		<dc:creator><![CDATA[Nam VÅ©]]></dc:creator>
		<pubDate>Sun, 25 Jul 2021 14:08:21 +0000</pubDate>
				<category><![CDATA[DIY]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[canon lbp 2900]]></category>
		<category><![CDATA[cups]]></category>
		<category><![CDATA[network printing]]></category>
		<category><![CDATA[raspberry pi]]></category>
		<guid isPermaLink="false">/?p=19676</guid>

					<description><![CDATA[Ok so after using it as an Media Server (OSMC, Kodi), Audio Server (Volumio, Moode), and most recently a CloudFlare DDNS updater on top of Raspbian Lite, I&#8217;m running out [&#8230;]]]></description>
										<content:encoded><![CDATA[
<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/G9SKyOJ.jpg" alt="G9SKyOJ" title="Setup a family printer with a Raspberry Pi 1, CUPS and Canon LBP 2900 1"><figcaption>Setup a family printer with a Raspberry Pi 1, CUPS and Canon LBP 2900 7</figcaption></figure>



<p>Ok so after using it as an Media Server (OSMC, Kodi), Audio Server (Volumio, Moode), and most recently a CloudFlare DDNS updater on top of Raspbian Lite, I&#8217;m running out of things to do with my old RPi. I figure there&#8217;s one thing I haven&#8217;t tried turning it into: a print server. So that&#8217;s what we&#8217;re gonna do today.</p>



<p>Now this is actually one of the most common usage of the Pi so there&#8217;s already plenty of guides out there, and there&#8217;s really no information in this post that can&#8217;t be found elsewhere on the Internet, but I&#8217;m gonna do a write up anyway, purely for the sake of documenting my process. </p>



<p>For the software we&#8217;ll be using CUPS running on top of Linux, naturally, since we don&#8217;t have a lot of options on that front. For the hardware, we&#8217;ll be using a first gen Raspberry Pi for the print server part, and Canon LBP 2900 for the actual printing. </p>



<p>Now this printer is interesting really, because despite being one of the most popular printers here in Vietnam, it&#8217;s not in the list of printer supported by CUPS. I reckon its popularity is fueled by its economical nature, it&#8217;s one of the very few laser printers that fall into the &#8216;cheap to buy, cheap to maintain&#8217; segment (it costs like $150 brand new, and cartridge replacement is like $3.85, which is insane!). So getting it to work with CUPS is going to require a bit more works, but thankfully there&#8217;s an open source driver out there that somebody reverse engineered to our benefits, so we&#8217;ll be using that.</p>



<span id="more-19676"></span>



<p>Ok first you need a RPi running a Linux flavor of your choice, I&#8217;m running Ubuntu Server 20.04 for ARM, you can also use Raspbian (use the Lite version if you plan to go headless) or DietPi. I actually tried DietPi first but current internet situation prevents it from reaching the update servers, plus I don&#8217;t like how it forces you to install a desktop environment on first install.</p>



<p>Once you have everything up and running, start by installing CUPS and the rest of the perquisites:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">sudo apt install -y build-essential git autoconf libtool cups libcups2-dev libcupsimage2-dev</pre>



<p>Grab the source code:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">git clone https://github.com/agalakhov/captdriver.git</pre>



<p>Compile the driver</p>



<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">cd captdriver
autoreconf -i
./configure
make</pre>



<p>Copy the files to their relevant locations</p>



<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">sudo cp src/rastertocapt /usr/lib/cups/filter/
sudo cp Canon*.ppd /usr/share/ppd/custom/</pre>



<p>Now go to CUPS WebUI (<em>https://&lt;raspberry-pi-ip&gt;:631/</em>) (if you can&#8217;t access it, see the UPDATE below), go to the <strong>Administration</strong> tab and click on &#8216;Add Printer&#8217;</p>



<div class="ghostkit-carousel" data-effect="slide" data-speed="0.2" data-autoplay="0" data-slides-per-view="2" data-centered-slides="false" data-loop="false" data-free-scroll="false" data-show-arrows="true" data-show-bullets="true" data-dynamic-bullets="true" data-gap="15"><div class="ghostkit-carousel-items">
<div class="ghostkit-carousel-slide">
<figure class="wp-block-image size-full"><img decoding="async" fetchpriority="high" width="670" height="477" src="/wp-content/uploads/2021/07/image-3.png" alt="image 3" class="wp-image-19733" srcset="/wp-content/uploads/2021/07/image-3.png 670w, /wp-content/uploads/2021/07/image-3-300x214.png 300w, /wp-content/uploads/2021/07/image-3-70x50.png 70w, /wp-content/uploads/2021/07/image-3-650x463.png 650w, /wp-content/uploads/2021/07/image-3-50x36.png 50w" sizes="(max-width: 670px) 100vw, 670px" title="Setup a family printer with a Raspberry Pi 1, CUPS and Canon LBP 2900 2"><figcaption>If you have the printer plugged into your RPi then it should show up under &#8216;Local Printers&#8217;</figcaption></figure>
</div>



<div class="ghostkit-carousel-slide">
<figure class="wp-block-image size-full"><img decoding="async" width="640" height="460" src="/wp-content/uploads/2021/07/image-4.png" alt="image 4" class="wp-image-19734" srcset="/wp-content/uploads/2021/07/image-4.png 640w, /wp-content/uploads/2021/07/image-4-300x216.png 300w, /wp-content/uploads/2021/07/image-4-70x50.png 70w, /wp-content/uploads/2021/07/image-4-50x36.png 50w" sizes="(max-width: 640px) 100vw, 640px" title="Setup a family printer with a Raspberry Pi 1, CUPS and Canon LBP 2900 3"><figcaption>Give it an easy to remember name, and remember to check &#8216;Share This Printer&#8217;</figcaption></figure>
</div>



<div class="ghostkit-carousel-slide">
<figure class="wp-block-image size-full"><img decoding="async" width="719" height="633" src="/wp-content/uploads/2021/07/image-6.png" alt="image 6" class="wp-image-19737" srcset="/wp-content/uploads/2021/07/image-6.png 719w, /wp-content/uploads/2021/07/image-6-300x264.png 300w, /wp-content/uploads/2021/07/image-6-57x50.png 57w, /wp-content/uploads/2021/07/image-6-650x572.png 650w, /wp-content/uploads/2021/07/image-6-50x44.png 50w" sizes="(max-width: 719px) 100vw, 719px" title="Setup a family printer with a Raspberry Pi 1, CUPS and Canon LBP 2900 4"><figcaption>Select &#8216;Canon Inc&#8217; here, if you don&#8217;t see it, refer to the &#8216; Copy the files to their relevant locations&#8217; section above</figcaption></figure>
</div>



<div class="ghostkit-carousel-slide">
<figure class="wp-block-image size-full"><img decoding="async" loading="lazy" width="697" height="606" src="/wp-content/uploads/2021/07/image-5.png" alt="image 5" class="wp-image-19735" srcset="/wp-content/uploads/2021/07/image-5.png 697w, /wp-content/uploads/2021/07/image-5-300x261.png 300w, /wp-content/uploads/2021/07/image-5-58x50.png 58w, /wp-content/uploads/2021/07/image-5-650x565.png 650w, /wp-content/uploads/2021/07/image-5-50x43.png 50w" sizes="(max-width: 697px) 100vw, 697px" title="Setup a family printer with a Raspberry Pi 1, CUPS and Canon LBP 2900 5"><figcaption>Select your printer model and you should be good to go</figcaption></figure>
</div>
</div><div class="ghostkit-carousel-arrow-prev-icon"><svg class="ghostkit-svg-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.7803 17.7803C14.4874 18.0732 14.0126 18.0732 13.7197 17.7803L8.4697 12.5303C8.1768 12.2374 8.1768 11.7626 8.4697 11.4697L13.7197 6.21967C14.0126 5.92678 14.4874 5.92678 14.7803 6.21967C15.0732 6.51256 15.0732 6.98744 14.7803 7.28033L10.0607 12L14.7803 16.7197C15.0732 17.0126 15.0732 17.4874 14.7803 17.7803Z" fill="currentColor"/></svg></div><div class="ghostkit-carousel-arrow-next-icon"><svg class="ghostkit-svg-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.21967 6.2197C9.51256 5.9268 9.98744 5.9268 10.2803 6.2197L15.5303 11.4697C15.8232 11.7626 15.8232 12.2374 15.5303 12.5303L10.2803 17.7803C9.98744 18.0732 9.51256 18.0732 9.21967 17.7803C8.92678 17.4874 8.92678 17.0126 9.21967 16.7197L13.9393 12L9.21967 7.2803C8.92678 6.9874 8.92678 6.5126 9.21967 6.2197Z" fill="currentColor"/></svg></div></div>



<p>If everything went correctly, your printer should now be detectable by other computers on the same network. For example, on my Windows PC next room, I could just go to Add a new printer and here it is:</p>



<figure class="wp-block-image size-large"><img decoding="async" loading="lazy" width="1024" height="570" src="/wp-content/uploads/2021/07/image-7-1024x570.png" alt="image 7" class="wp-image-19745" srcset="/wp-content/uploads/2021/07/image-7-1024x570.png 1024w, /wp-content/uploads/2021/07/image-7-300x167.png 300w, /wp-content/uploads/2021/07/image-7-768x428.png 768w, /wp-content/uploads/2021/07/image-7-90x50.png 90w, /wp-content/uploads/2021/07/image-7-650x362.png 650w, /wp-content/uploads/2021/07/image-7-1000x557.png 1000w, /wp-content/uploads/2021/07/image-7-50x28.png 50w, /wp-content/uploads/2021/07/image-7.png 1200w" sizes="(max-width: 1024px) 100vw, 1024px" title="Setup a family printer with a Raspberry Pi 1, CUPS and Canon LBP 2900 6"><figcaption>Setup a family printer with a Raspberry Pi 1, CUPS and Canon LBP 2900 8</figcaption></figure>



<p>Go ahead, add it and print a test page, see if it works.</p>



<p><strong>UPDATE July 30:</strong> As I was going over this process for a second time, I realize I missed one step: that is setting CUPS up to be remotely accessible. CUPS default configuration only let you access the WebUI from the local machine, which is really dumb IMO, but not a lot of old opensource project can say they put the end user front and center in their design process. Anyway, the point is, if you want to access CUPS WebUI from another machine, you need to edit <mark class="ghostkit-highlight">/etc/cups/cupsd.conf</mark> and modify a few values. Specifically:</p>



<p>Find <code data-enlighter-language="generic" class="EnlighterJSRAW"># Only listen for connections from the local machine.</code></p>



<p>Replace <code data-enlighter-language="generic" class="EnlighterJSRAW">listen localhost:631</code> with just <code data-enlighter-language="generic" class="EnlighterJSRAW">Port 631</code></p>



<p>Find <code data-enlighter-language="generic" class="EnlighterJSRAW"># Show shared printers on the local network.</code></p>



<p>Change <code data-enlighter-language="generic" class="EnlighterJSRAW">Browsing Off</code> to <code data-enlighter-language="generic" class="EnlighterJSRAW">Browsing On</code></p>



<p>Find <code data-enlighter-language="generic" class="EnlighterJSRAW"># Restrict access to the serverâ¦</code> and <code data-enlighter-language="generic" class="EnlighterJSRAW"># Restrict access to the admin pagesâ¦</code></p>



<p>Add <code data-enlighter-language="generic" class="EnlighterJSRAW">Allow all</code> above <code data-enlighter-language="generic" class="EnlighterJSRAW">Order allow,deny</code></p>



<p>I&#8217;ve included the entirety of my <mark class="ghostkit-highlight">cupsd.conf</mark> here if you need it:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">#
# Configuration file for the CUPS scheduler.  See "man cupsd.conf" for a
# complete description of this file.
#

# Log general information in error_log - change "warn" to "debug"
# for troubleshooting...
LogLevel warn
PageLogFormat

# Deactivate CUPS' internal logrotating, as we provide a better one, especially
# LogLevel debug2 gets usable now
MaxLogSize 0

# Only listen for connections from the local machine.
Port 631
Listen /run/cups/cups.sock

# Show shared printers on the local network.
Browsing On
BrowseLocalProtocols dnssd

# Default authentication type, when authentication is required...
DefaultAuthType Basic

# Web interface setting...
WebInterface Yes

# Restrict access to the server...
&lt;Location />
  Allow all
  Order allow,deny
&lt;/Location>

# Restrict access to the admin pages...
&lt;Location /admin>
  Allow all
  Order allow,deny
&lt;/Location>

# Restrict access to configuration files...
&lt;Location /admin/conf>
  AuthType Default
  Require user @SYSTEM
  Order allow,deny
&lt;/Location>

# Restrict access to log files...
&lt;Location /admin/log>
  AuthType Default
  Require user @SYSTEM
  Order allow,deny
&lt;/Location>

# Set the default printer/job policies...
&lt;Policy default>
  # Job/subscription privacy...
  JobPrivateAccess default
  JobPrivateValues default
  SubscriptionPrivateAccess default
  SubscriptionPrivateValues default

  # Job-related operations must be done by the owner or an administrator...
  &lt;Limit Create-Job Print-Job Print-URI Validate-Job>
    Order deny,allow
  &lt;/Limit>

  &lt;Limit Send-Document Send-URI Hold-Job Release-Job Restart-Job Purge-Jobs Set-Job-Attributes Create-Job-Subscription Renew-Subscription Cancel-Subscription Get-Notifications Reprocess-Job Cancel-Current-Job Suspend-Current-Job Resume-Job Cancel-My-Jobs Close-Job CUPS-Move-Job CUPS-Get-Document>
    Require user @OWNER @SYSTEM
    Order deny,allow
  &lt;/Limit>

  # All administration operations require an administrator to authenticate...
  &lt;Limit CUPS-Add-Modify-Printer CUPS-Delete-Printer CUPS-Add-Modify-Class CUPS-Delete-Class CUPS-Set-Default CUPS-Get-Devices>
    AuthType Default
    Require user @SYSTEM
    Order deny,allow
  &lt;/Limit>

  # All printer operations require a printer operator to authenticate...
  &lt;Limit Pause-Printer Resume-Printer Enable-Printer Disable-Printer Pause-Printer-After-Current-Job Hold-New-Jobs Release-Held-New-Jobs Deactivate-Printer Activate-Printer Restart-Printer Shutdown-Printer Startup-Printer Promote-Job Schedule-Job-After Cancel-Jobs CUPS-Accept-Jobs CUPS-Reject-Jobs>
    AuthType Default
    Require user @SYSTEM
    Order deny,allow
  &lt;/Limit>

  # Only the owner or an administrator can cancel or authenticate a job...
  &lt;Limit Cancel-Job CUPS-Authenticate-Job>
    Require user @OWNER @SYSTEM
    Order deny,allow
  &lt;/Limit>

  &lt;Limit All>
    Order deny,allow
  &lt;/Limit>
&lt;/Policy>

# Set the authenticated printer/job policies...
&lt;Policy authenticated>
  # Job/subscription privacy...
  JobPrivateAccess default
  JobPrivateValues default
  SubscriptionPrivateAccess default
  SubscriptionPrivateValues default

  # Job-related operations must be done by the owner or an administrator...
  &lt;Limit Create-Job Print-Job Print-URI Validate-Job>
    AuthType Default
    Order deny,allow
  &lt;/Limit>

  &lt;Limit Send-Document Send-URI Hold-Job Release-Job Restart-Job Purge-Jobs Set-Job-Attributes Create-Job-Subscription Renew-Subscription Cancel-Subscription Get-Notifications Reprocess-Job Cancel-Current-Job Suspend-Current-Job Resume-Job Cancel-My-Jobs Close-Job CUPS-Move-Job CUPS-Get-Document>
    AuthType Default
    Require user @OWNER @SYSTEM
    Order deny,allow
  &lt;/Limit>

  # All administration operations require an administrator to authenticate...
  &lt;Limit CUPS-Add-Modify-Printer CUPS-Delete-Printer CUPS-Add-Modify-Class CUPS-Delete-Class CUPS-Set-Default>
    AuthType Default
    Require user @SYSTEM
    Order deny,allow
  &lt;/Limit>

  # All printer operations require a printer operator to authenticate...
  &lt;Limit Pause-Printer Resume-Printer Enable-Printer Disable-Printer Pause-Printer-After-Current-Job Hold-New-Jobs Release-Held-New-Jobs Deactivate-Printer Activate-Printer Restart-Printer Shutdown-Printer Startup-Printer Promote-Job Schedule-Job-After Cancel-Jobs CUPS-Accept-Jobs CUPS-Reject-Jobs>
    AuthType Default
    Require user @SYSTEM
    Order deny,allow
  &lt;/Limit>

  # Only the owner or an administrator can cancel or authenticate a job...
  &lt;Limit Cancel-Job CUPS-Authenticate-Job>
    AuthType Default
    Require user @OWNER @SYSTEM
    Order deny,allow
  &lt;/Limit>

  &lt;Limit All>
    Order deny,allow
  &lt;/Limit>
&lt;/Policy>

# Set the kerberized printer/job policies...
&lt;Policy kerberos>
  # Job/subscription privacy...
  JobPrivateAccess default
  JobPrivateValues default
  SubscriptionPrivateAccess default
  SubscriptionPrivateValues default

  # Job-related operations must be done by the owner or an administrator...
  &lt;Limit Create-Job Print-Job Print-URI Validate-Job>
    AuthType Negotiate
    Order deny,allow
  &lt;/Limit>

  &lt;Limit Send-Document Send-URI Hold-Job Release-Job Restart-Job Purge-Jobs Set-Job-Attributes Create-Job-Subscription Renew-Subscription Cancel-Subscription Get-Notifications Reprocess-Job Cancel-Current-Job Suspend-Current-Job Resume-Job Cancel-My-Jobs Close-Job CUPS-Move-Job CUPS-Get-Document>
    AuthType Negotiate
    Require user @OWNER @SYSTEM
    Order deny,allow
  &lt;/Limit>

  # All administration operations require an administrator to authenticate...
  &lt;Limit CUPS-Add-Modify-Printer CUPS-Delete-Printer CUPS-Add-Modify-Class CUPS-Delete-Class CUPS-Set-Default>
    AuthType Default
    Require user @SYSTEM
    Order deny,allow
  &lt;/Limit>

  # All printer operations require a printer operator to authenticate...
  &lt;Limit Pause-Printer Resume-Printer Enable-Printer Disable-Printer Pause-Printer-After-Current-Job Hold-New-Jobs Release-Held-New-Jobs Deactivate-Printer Activate-Printer Restart-Printer Shutdown-Printer Startup-Printer Promote-Job Schedule-Job-After Cancel-Jobs CUPS-Accept-Jobs CUPS-Reject-Jobs>
    AuthType Default
    Require user @SYSTEM
    Order deny,allow
  &lt;/Limit>

  # Only the owner or an administrator can cancel or authenticate a job...
  &lt;Limit Cancel-Job CUPS-Authenticate-Job>
    AuthType Negotiate
    Require user @OWNER @SYSTEM
    Order deny,allow
  &lt;/Limit>

  &lt;Limit All>
    Order deny,allow
  &lt;/Limit>
&lt;/Policy>
</pre>



<p>That&#8217;s it right? You should be able to access the WebUI and perform the rest of the tasks, right? Well not so fast junior, while you should be able to access the WebUI by now, you&#8217;ll soon realize that you&#8217;re forbidden to add a new printer.  I don&#8217;t know why it needs to be like this but you need to add yourself to the <em>lpadmin</em> group by doing <code data-enlighter-language="generic" class="EnlighterJSRAW">sudo usermod -a -G lpadmin &lt;your-username&gt;</code></p>



<p>Now you should be done. If that whole process made you feel nostalgic, that&#8217;s probably because it reminds you of how we used to &#8216;install&#8217; plugin for phpBB in the good old days. Who would&#8217;ve thought that 20 years later we&#8217;d still be doing that eh? OSS at its finest.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2021/07/setup-a-family-printer-with-a-raspberry-pi-1-and-canon-lbp-2900/feed/</wfw:commentRss>
			<slash:comments>14</slash:comments>
		
		
			</item>
		<item>
		<title>Hosting my own Netflix on an ancient Mac Mini 2011</title>
		<link>/2021/02/hosting-my-own-netflix-on-an-ancient-mac-mini-2011/</link>
					<comments>/2021/02/hosting-my-own-netflix-on-an-ancient-mac-mini-2011/#comments</comments>
		
		<dc:creator><![CDATA[Nam VÅ©]]></dc:creator>
		<pubDate>Wed, 24 Feb 2021 05:47:19 +0000</pubDate>
				<category><![CDATA[Tips & Tricks]]></category>
		<category><![CDATA[cloudflare]]></category>
		<category><![CDATA[ddns]]></category>
		<category><![CDATA[media server]]></category>
		<category><![CDATA[phimhub.club]]></category>
		<category><![CDATA[plex]]></category>
		<category><![CDATA[raspberry pi]]></category>
		<guid isPermaLink="false">/?p=14873</guid>

					<description><![CDATA[(This is not really a guide or a tutorial, you may get some tips on how to setup a reverse proxy to access your server from your own domain, but [&#8230;]]]></description>
										<content:encoded><![CDATA[
<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/F118CfL.png" alt="F118CfL" title="Hosting my own Netflix on an ancient Mac Mini 2011 9"><figcaption>Hosting my own Netflix on an ancient Mac Mini 2011 11</figcaption></figure>



<p><em>(This is not really a guide or a tutorial, you may get some tips on how to setup a reverse proxy to access your server from your own domain, but if you&#8217;re here looking for a full blown media server setup guide, you&#8217;re in the wrong place)</em></p>



<p>I&#8217;m sure I&#8217;m not the first to have setup a little media server at home serving all kinds of, um, totally legal content that you obtained from the Internet. But accessing it outside of your home has always been something that I never got around to do.</p>



<p>Until this Tet holiday that is.</p>



<p>Since I had to spend like 4-5 days at my inlaws during these times, I knew Netflix alone ain&#8217;t gonna cut it, especially since I&#8217;ve pretty much watched everything that worth watching on it. I need to be able to access my quality contents that were sitting under my TV in my bedroom, a hundred kilometer away.</p>



<figure class="wp-block-image size-large"><img decoding="async" loading="lazy" width="1024" height="768" src="/wp-content/uploads/2021/02/phimhub_jelly-1024x768.jpg" alt="phimhub jelly" class="wp-image-14874" srcset="/wp-content/uploads/2021/02/phimhub_jelly-1024x768.jpg 1024w, /wp-content/uploads/2021/02/phimhub_jelly-300x225.jpg 300w, /wp-content/uploads/2021/02/phimhub_jelly-768x576.jpg 768w, /wp-content/uploads/2021/02/phimhub_jelly-67x50.jpg 67w, /wp-content/uploads/2021/02/phimhub_jelly-650x488.jpg 650w, /wp-content/uploads/2021/02/phimhub_jelly-1000x750.jpg 1000w, /wp-content/uploads/2021/02/phimhub_jelly-50x38.jpg 50w, /wp-content/uploads/2021/02/phimhub_jelly.jpg 1280w" sizes="(max-width: 1024px) 100vw, 1024px" title="Hosting my own Netflix on an ancient Mac Mini 2011 10"><figcaption>Jellyfin running perfectly on my inlaws&#8217; smart TV</figcaption></figure>



<p>Anywho, enough rambling. You want to know how I set it up. Read on.</p>



<span id="more-14873"></span>



<p>It&#8217;s simple really, I bought a used Mac Mini 2011 for around $40 back in 2018. It has a what I believe a 3rd gen core i5 and 6GB of DDR3 SODIMM RAM. I know it is a potato, but it consumes about 85W at full load so I can leave it running 24/7 instead of my Ryzen rig. Originally it only serves as a media player for my wife to watch movies on FPT Play, HayHayTV, PubVN, MotPhim, etc. on our cheapo Asanzo TV (some of these services only run on a browser so Kodi doesn&#8217;t cut it, need to be a fully functional OS). She only watches for around 2 hours each night, yet the thing is running 24/7, it would a complete waste of electricity if I don&#8217;t somehow find a way to make it useful for the rest of the day.</p>



<p>And that&#8217;s where Jellyfin came in. A few simple setups and you can now watch movies store on this little potato.</p>



<p>Basically there&#8217;s only 4 steps involved:</p>



<ol><li>Download, install and run Jellyfin server</li><li>Populate your media library with whatever movies/TV shows you have</li><li>Install Caddy and run the command below</li><li>Point your domain DNS to your home&#8217;s public IP</li></ol>



<p>I got the reverse proxy up, bind it to my domain WITH a valid SSL with a single command:</p>



<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">caddy reverse-proxy --from example.com --to 127.0.0.1:8096</pre>



<p>(Check out <a href="https://jellyfin.org/docs/general/networking/caddy.html" data-type="URL" data-id="https://jellyfin.org/docs/general/networking/caddy.html" target="_blank" rel="noreferrer noopener">Jellyfin documentation on Caddy</a> if you need further information) </p>



<p>That&#8217;s it. You&#8217;re done!</p>



<p>Of course, since I&#8217;m running the server from my bedroom, there&#8217;s still the issue with dynamic IP address. Viettel is not exactly the most reliable ISP so I get random modem reboot every couple of days. Everytime it happens I&#8217;d need to log into CloudFlare and manually change the DNS to my new public IP address. That is a pain indeed. </p>



<p>Luckily there is a way to automate this process.</p>



<h2 class="wp-block-heading"><span class="has-inline-color has-black-color">Running a cronjob to update your domain&#8217;s DNS every hour.</span></h2>



<p>You&#8217;ll need a machine running 24/7 for this task. The most efficient way is to run it on your media server since it&#8217;s already doing this.</p>



<p>But efficient is not what I do <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f61b.png" alt="ð" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>



<p>I have an old Raspberry Pi (the original one) that is just begging to be useful. So that&#8217;s what I&#8217;ll use instead.</p>



<p>Basically, throw Raspbian on it, and setup a cronjob to run this shell script every few hours to update your DNS.</p>



<p>(The full guide can be found over at <a href="https://letswp.io/cloudflare-as-dynamic-dns-raspberry-pi/" data-type="URL" data-id="https://letswp.io/cloudflare-as-dynamic-dns-raspberry-pi/" target="_blank" rel="noreferrer noopener">LetsWP</a>, check them out, I only copy the script here for your convenience)</p>



<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">#!/bin/bash
# Cloudflare as Dynamic DNS
# From: https://letswp.io/cloudflare-as-dynamic-dns-raspberry-pi/
# Based on: https://gist.github.com/benkulbertis/fff10759c2391b6618dd/
# Original non-RPi article: https://phillymesh.net/2016/02/23/setting-up-dynamic-dns-for-your-registered-domain-through-cloudflare/

# Update these with real values
auth_email="email@example.com"
auth_key="global_api_key_goes_here" 
zone_name="example.com"
record_name="home.example.com"

# Don't touch these
ip=$(curl -s http://ipv4.icanhazip.com)/
ip_file="ip.txt"
id_file="cloudflare.ids"
log_file="cloudflare.log"

# Keep files in the same folder when run from cron
current="$(pwd)"
cd "$(dirname "$(readlink -f "$0")")"

log() {
    if [ "$1" ]; then
        echo -e "[$(date)] - $1" >> $log_file
    fi
}

log "Check Initiated"

if [ -f $ip_file ]; then
    old_ip=$(cat $ip_file)
    if [ $ip == $old_ip ]; then
        log "IP has not changed."
        exit 0
    fi
fi

if [ -f $id_file ] &amp;&amp; [ $(wc -l $id_file | cut -d " " -f 1) == 2 ]; then
    zone_identifier=$(head -1 $id_file)
    record_identifier=$(tail -1 $id_file)
else
    zone_identifier=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones?name=$zone_name" -H "X-Auth-Email: $auth_email" -H "X-Auth-Key: $auth_key" -H "Content-Type: application/json" | grep -Po '(?&lt;="id":")[^"]*' | head -1 )
    record_identifier=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records?name=$record_name" -H "X-Auth-Email: $auth_email" -H "X-Auth-Key: $auth_key" -H "Content-Type: application/json"  | grep -Po '(?&lt;="id":")[^"]*')
    echo "$zone_identifier" > $id_file
    echo "$record_identifier" >> $id_file
fi

update=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/$record_identifier" -H "X-Auth-Email: $auth_email" -H "X-Auth-Key: $auth_key" -H "Content-Type: application/json" --data "{\"id\":\"$zone_identifier\",\"type\":\"A\",\"name\":\"$record_name\",\"content\":\"$ip\"}")

if [[ $update == *"\"success\":false"* ]]; then
    message="API UPDATE FAILED. DUMPING RESULTS:\n$update"
    log "$message"
    echo -e "$message"
    exit 1 
else
    message="IP changed to: $ip"
    echo "$ip" > $ip_file
    log "$message"
    echo "$message"
fi
</pre>



<h2 class="wp-block-heading"><span class="has-inline-color has-black-color">FAQ</span></h2>



<div class="wp-block-uagb-faq uagb-faq__outer-wrap uagb-block-cfc65bd4 uagb-faq-icon-row uagb-faq-layout-accordion uagb-faq-expand-first-false uagb-faq-inactive-other-true uagb-faq-equal-height" data-faqtoggle="true" role="tablist"><div class="uagb-faq__wrap uagb-buttons-layout-wrap">
<div class="wp-block-uagb-faq-child uagb-faq-child__outer-wrap uagb-block-16ab6766"><div class="uagb-faq-child__wrapper"><div class="uagb-faq-item" role="tab" tabindex="0"><div class="uagb-faq-questions-button uagb-faq-questions"><span class="uagb-icon uagb-faq-icon-wrap"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg></span><span class="uagb-icon-active uagb-faq-icon-wrap"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path d="M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg></span><span class="uagb-question">Why Jellyfin over Plex/Emby/&lt;insert other media server name>?</span></div><div class="uagb-faq-content"><span><p>I actually started with <a href="https://www.plex.tv/" target="_blank" rel="noopener">Plex</a>, which seems to be the single most popular media server software these days. And it was great, unbelievably so for a free software. I was able to get my entire library up and running in no time, the UI looks slick (which for an interface designer like me, is a huge plus), and remote access works out of the box (provided of course, you have port forwarding properly setup on your router). But after using it for a couple of days, I decided to scrap it and go with Jellyfin, a lesser known media server solution. There&#8217;s 2 things that bothered me with Plex:<br><br>â¢ <strong>Plex is a lot less &#8216;free&#8217; than you thought.</strong> You may not need a Plex Pass to enable Remote Access on your own server, but can you really freely access it remotely is a huge asterisk. To clarify, accessing it remotely from the web client is entirely free with no restriction whatsoever. BUT accessing your Plex server from its mobile app is going to cost you, either in the form of the Plex Pass or in the case of the Android app, a one time payment of $5, which I paid, but still moved on anyway. Why? Because of the next point.<br><br>â¢ <strong>Plex has started invading your personal library with their own contents.</strong> While the contents they offer aren&#8217;t exactly bad (I do love me some classic Popeye the Sailor Man), the way they populate their content in your own server makes it utterly confusing to end user to differentiate between Plex&#8217;s content and your own. Most people who self-host stuffs tend to be pretty anal about having a setup exactly the way they want it, I&#8217;m no exception.<br><br>As for Emby, I&#8217;ve heard good things about it, but I also heard it&#8217;s more or less the same as Plex, right down to the premium pricing strategy, so I went ahead and skip it.<br><br>Installed Jellyfin and was absolutely pleased with it, everything just works out of the box, and all the platform apps are free. As a strong supporter of the free software movement, it&#8217;s a no brainer for me. Plex and Emby couldn&#8217;t win me back even if they offer Plex Plass or Emby Premiere for free now.</p></span></div></div></div></div>



<div class="wp-block-uagb-faq-child uagb-faq-child__outer-wrap uagb-block-e0ee3da3"><div class="uagb-faq-child__wrapper"><div class="uagb-faq-item" role="tab" tabindex="0"><div class="uagb-faq-questions-button uagb-faq-questions"><span class="uagb-icon uagb-faq-icon-wrap"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg></span><span class="uagb-icon-active uagb-faq-icon-wrap"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path d="M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg></span><span class="uagb-question">Why use your own domain instead of a Dynamic DNS service like DynDNS or MyDNS.vn?</span></div><div class="uagb-faq-content"><span><p>To be honest, for home use, there&#8217;s no real good reason. In fact, if you&#8217;re looking for simplicity, I&#8217;d recommend going that route. Most DDNS services can be configured right from your router, saving you the trouble of having a machine dedicated to updating the IP address, AND there&#8217;s less setting up involved too (you don&#8217;t even need a reverse proxy unless you want SSL). <br><br>I only use my own domain because, well, I can. I have a bunch of domains lying around not being used for anything and and Raspberry Pi first gen that I don&#8217;t know what to do with (its support had been dropped by virtually everyone). So naturally its only usefulness these days is being a DDNS server. Plus I managed to learn a couple of things along the way so&#8230;</p></span></div></div></div></div>



<div class="wp-block-uagb-faq-child uagb-faq-child__outer-wrap uagb-block-374b2231"><div class="uagb-faq-child__wrapper"><div class="uagb-faq-item" role="tab" tabindex="0"><div class="uagb-faq-questions-button uagb-faq-questions"><span class="uagb-icon uagb-faq-icon-wrap"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg></span><span class="uagb-icon-active uagb-faq-icon-wrap"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path d="M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg></span><span class="uagb-question">Why run from your bedroom instead of deploying on a GCP/AWS instance or a web server like you usually do?</span></div><div class="uagb-faq-content"><span><p>I actually did for a while, but as it turns out, big corps hate anything to with movies sharing on the interweb. I initially hosted a wordpress site on the same server as namvu.net (which doesn&#8217;t even host any of the movies), and Google illegally suspended my VM instance without even a warning, took out namvu.net and a bunch of my other websites as well. To add insults to injury, they even had the galls to ask me why THEY suspended ME (!?). Talking about incompetency</p></span></div></div></div></div>



<div class="wp-block-uagb-faq-child uagb-faq-child__outer-wrap uagb-block-dfc4fff2"><div class="uagb-faq-child__wrapper"><div class="uagb-faq-item" role="tab" tabindex="0"><div class="uagb-faq-questions-button uagb-faq-questions"><span class="uagb-icon uagb-faq-icon-wrap"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg></span><span class="uagb-icon-active uagb-faq-icon-wrap"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path d="M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg></span><span class="uagb-question">Do I really need a reverse proxy to access Jellyfin remotely?</span></div><div class="uagb-faq-content"><span><p>As a matter of fact, you don&#8217;t. The only thing the reverse proxy is good for in this use case is so you can easily bind your domain to the exact address + port combination on your server, and add a SSL to it so users don&#8217;t have to remember the port number everytime they need to access your library. So instead of going to <em>172.191.1.255:8096</em> and be greeted with a big fat warning about unsecure connection (if they are using a modern browser), your users can just visit yoursite.domain and boom, they&#8217;re in business, much like going to Netflix.<br>You could potentially get around the port issue by somehow running on Jellyfin on port 80 (default http port) or something. But on UNIX systems like Linux and OS X you need elevated access to run services on port below 1024, which means you have to manually start the service each time your machine start. I didn&#8217;t want to bother with that.</p></span></div></div></div></div>



<div class="wp-block-uagb-faq-child uagb-faq-child__outer-wrap uagb-block-a67db08d"><div class="uagb-faq-child__wrapper"><div class="uagb-faq-item" role="tab" tabindex="0"><div class="uagb-faq-questions-button uagb-faq-questions"><span class="uagb-icon uagb-faq-icon-wrap"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg></span><span class="uagb-icon-active uagb-faq-icon-wrap"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path d="M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg></span><span class="uagb-question">Why caddy over nginx for reverse proxy? I heard so much about nginx but never heard about caddy</span></div><div class="uagb-faq-content"><span><p>So did I, that&#8217;s why I actually started with nginx. But setting nginx up is a daunting task in itself. My Mac Mini is 2011 which means it&#8217;s stuck with High Sierra, meaning almost all Homebrew package now needs to be built from source. That&#8217;s easy enough but there&#8217;s still the issue with setting nginx up and running on restricted port which I mentioned above. You need nginx on port 80 if you want to use any AutoSSL script like acme.sh or certbot. That involves editing some config file and I absolutely detest nginx config format. <br>Caddy on the other hand, well it just works. One single command and it gets your reverse proxy up, bind your domain to your port, AND auto secure it with a SSL. With One &#8211; Single &#8211; Command &#8211; Line.<br>There&#8217;s really no contest here.</p></span></div></div></div></div>
</div></div>



<p></p>
]]></content:encoded>
					
					<wfw:commentRss>/2021/02/hosting-my-own-netflix-on-an-ancient-mac-mini-2011/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
	</channel>
</rss>
